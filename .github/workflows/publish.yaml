name: Publish
on:
  push:
    #tags:
      #- "v*.*.*"
env:
  CLICOLOR_FORCE: 1
jobs:
  build:
    name: Publish for ${{ matrix.binary_target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            binary_target: x86_64-unknown-linux-gnu
            download_platform: unknown-linux-gnu
            download_arch: x86_64
          - os: ubuntu-latest
            binary_target: x86_64-unknown-linux-musl
            download_platform: unknown-linux-musl
            download_arch: x86_64
          - os: windows-latest
            binary_target: x86_64-pc-windows-msvc
            download_platform: pc-windows-msvc
            download_arch: x86_64
          - os: macos-latest
            binary_target: x86_64-apple-darwin
            download_platform: apple-darwin
            download_arch: x86_64
          - os: macos-latest
            binary_target: aarch64-apple-darwin
            download_platform: apple-darwin
            download_arch: aarch64
    steps:
      - name: Set binary name
        if: matrix.binary_target != 'x86_64-pc-windows-msvc'
        run: |
          echo "BINARY_NAME=sos" >> $GITHUB_ENV
      - name: Set binary name (Windows)
        if: matrix.binary_target == 'x86_64-pc-windows-msvc'
        shell: bash
        run: |
          echo "BINARY_NAME=sos.exe" >> $GITHUB_ENV

      - name: Install release tools
        uses: jaxxstorm/action-install-gh-release@v1.10.0
        with:
          token: ${{ secrets.SOS_RELEASE_DOWNLOAD }}
          repo: saveoursecrets/release-tools
          platform: ${{ matrix.download_platform }}
          arch: ${{ matrix.download_arch }}

      - name: Install musl tools
        if: matrix.binary_target == 'x86_64-unknown-linux-musl'
        run: sudo apt-get install musl-tools
      - name: Checkout
        uses: actions/checkout@v2
      - name: Update rust
        run: |
          rustup override set stable
          rustup update stable
          rustup target add ${{ matrix.binary_target }}
      - name: Build Binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.binary_target }}

      - name: Archive Release
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: 'zip'
          filename: '${{ matrix.binary_target }}.zip'
          directory: 'target/${{ matrix.binary_target }}/release'
          path: ${{ env.BINARY_NAME }}

      - name: Upload Binaries
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: 'target/${{ matrix.binary_target }}/release/${{ matrix.binary_target }}.zip'
          tag: ${{ github.ref }}
          overwrite: true
