name: Release

on:
  push:
    tags:
      - '*'

env:
  RUST_LOG: "0"

jobs:
  build:
    name: build
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: 'x86_64-apple-darwin'
          #- host: macos-latest
            #target: 'aarch64-apple-darwin'
          #- host: ubuntu-latest
            #target: 'x86_64-unknown-linux-gnu'
          #- host: ubuntu-latest
            #target: 'aarch64-unknown-linux-gnu'
          #- host: windows-latest
            #target: 'x86_64-pc-windows-msvc'
          #- host: windows-latest
            #target: 'aarch64-pc-windows-msvc'

    runs-on: ${{ matrix.settings.host }}

    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          target: ${{ matrix.settings.target }}
      - name: Run cargo build
        run: cargo build --release --all --target=${{ matrix.settings.target }}
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.settings.target }}
          path: |
            target/${{ matrix.settings.target }}/release/sos-audit
            target/${{ matrix.settings.target }}/release/sos-check
            target/${{ matrix.settings.target }}/release/sos-client
            target/${{ matrix.settings.target }}/release/sos-server

  upload-release:
    name: upload-release
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
            path: artifacts
      - name: Display structure of downloaded files
        run: ls -R artifacts
      - name: Tarball release artifacts
        run: >-
          mkdir tarballs;
          for target in $(ls artifacts); do
            echo $target;
            for bin in $(ls $target); do
              echo $bin;
              tar -czvf tarballs/${bin}-${target}.tar.gz artifacts/${target}/${bin};
            done
          done
      - name: Display structure of tarballs
        run: ls -R tarballs
      #- uses: ncipollo/release-action@v1
        #with:
          #artifactErrorsFailBuild: true
          #artifacts: "tarballs/*.tar.gz"
          ##bodyFile: "body.md"
          #token: ${{ secrets.GITHUB_TOKEN }}
