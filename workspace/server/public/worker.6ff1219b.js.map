{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-19b306a66473ce85.js","../workspace/wasm/pkg/sos_wasm.js","node_modules/@parcel/runtime-js/lib/runtime-a62ae306be98bff3.js","node_modules/comlink/src/comlink.ts","src/worker.ts"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"2WX22\\\":\\\"worker.6ff1219b.js\\\",\\\"6DeOB\\\":\\\"sos_wasm_bg.36f55a9f.wasm\\\"}\"));","\nlet wasm;\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n/**\n*/\nexport function start() {\n    wasm.start();\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n* Generate a passphrase using the diceware module.\n* @param {number} words\n* @returns {any}\n*/\nexport function generatePassphrase(words) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.generatePassphrase(retptr, words);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return takeObject(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\n/**\n* Binding to the gatekeeper for a vault.\n*/\nexport class WebVault {\n\n    static __wrap(ptr) {\n        const obj = Object.create(WebVault.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_webvault_free(ptr);\n    }\n    /**\n    * Create an empty vault.\n    */\n    constructor() {\n        var ret = wasm.webvault_new();\n        return WebVault.__wrap(ret);\n    }\n    /**\n    * Initialize the vault with the given label and password.\n    * @param {any} label\n    * @param {any} password\n    */\n    initialize(label, password) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.webvault_initialize(retptr, this.ptr, addHeapObject(label), addHeapObject(password));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Import a buffer as the vault.\n    * @param {any} buffer\n    */\n    importBuffer(buffer) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.webvault_importBuffer(retptr, this.ptr, addHeapObject(buffer));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Get the index of the meta data for the collection of secrets.\n    * @returns {any}\n    */\n    getSecretIndex() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.webvault_getSecretIndex(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Get the identifier for the vault.\n    * @returns {any}\n    */\n    id() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.webvault_id(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Get the label for the vault.\n    * @returns {any}\n    */\n    label() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.webvault_label(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Create a new account password.\n    * @param {any} request\n    * @returns {any}\n    */\n    createAccountPassword(request) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.webvault_createAccountPassword(retptr, this.ptr, addHeapObject(request));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Create a new secure note.\n    * @param {any} request\n    * @returns {any}\n    */\n    createNote(request) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.webvault_createNote(retptr, this.ptr, addHeapObject(request));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Create a new credentials list.\n    * @param {any} request\n    * @returns {any}\n    */\n    createCredentials(request) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.webvault_createCredentials(retptr, this.ptr, addHeapObject(request));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Create a new file upload.\n    * @param {any} request\n    * @returns {any}\n    */\n    createFileUpload(request) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.webvault_createFileUpload(retptr, this.ptr, addHeapObject(request));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Unlock the vault.\n    * @param {any} passphrase\n    */\n    unlock(passphrase) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.webvault_unlock(retptr, this.ptr, addHeapObject(passphrase));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Lock the vault.\n    */\n    lock() {\n        wasm.webvault_lock(this.ptr);\n    }\n    /**\n    * Get a buffer of the encoded vault.\n    * @returns {Uint8Array}\n    */\n    buffer() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.webvault_buffer(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            var r3 = getInt32Memory0()[retptr / 4 + 3];\n            if (r3) {\n                throw takeObject(r2);\n            }\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n\nasync function load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nasync function init(input) {\n    if (typeof input === 'undefined') {\n        input = new URL('sos_wasm_bg.wasm', import.meta.url);\n    }\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_json_parse = function(arg0, arg1) {\n        var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_json_serialize = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        var ret = JSON.stringify(obj === undefined ? null : obj);\n        var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbindgen_error_new = function(arg0, arg1) {\n        var ret = new Error(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_log_7b91984099667bb9 = function(arg0, arg1) {\n        console.log(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbg_new_693216e109162396 = function() {\n        var ret = new Error();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_stack_0ddaca5d1abfb52f = function(arg0, arg1) {\n        var ret = getObject(arg1).stack;\n        var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbg_error_09919627ac0992f5 = function(arg0, arg1) {\n        try {\n            console.error(getStringFromWasm0(arg0, arg1));\n        } finally {\n            wasm.__wbindgen_free(arg0, arg1);\n        }\n    };\n    imports.wbg.__wbg_randomFillSync_378e02b85af41ab6 = function() { return handleError(function (arg0, arg1, arg2) {\n        getObject(arg0).randomFillSync(getArrayU8FromWasm0(arg1, arg2));\n    }, arguments) };\n    imports.wbg.__wbg_getRandomValues_99bbe8a65f4aef87 = function() { return handleError(function (arg0, arg1) {\n        getObject(arg0).getRandomValues(getObject(arg1));\n    }, arguments) };\n    imports.wbg.__wbg_process_5729605ce9d34ea8 = function(arg0) {\n        var ret = getObject(arg0).process;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_is_object = function(arg0) {\n        const val = getObject(arg0);\n        var ret = typeof(val) === 'object' && val !== null;\n        return ret;\n    };\n    imports.wbg.__wbg_versions_531e16e1a776ee97 = function(arg0) {\n        var ret = getObject(arg0).versions;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_node_18b58a160b60d170 = function(arg0) {\n        var ret = getObject(arg0).node;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_is_string = function(arg0) {\n        var ret = typeof(getObject(arg0)) === 'string';\n        return ret;\n    };\n    imports.wbg.__wbg_static_accessor_NODE_MODULE_bdc5ca9096c68aeb = function() {\n        var ret = module;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_require_edfaedd93e302925 = function() { return handleError(function (arg0, arg1, arg2) {\n        var ret = getObject(arg0).require(getStringFromWasm0(arg1, arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_crypto_2bc4d5b05161de5b = function(arg0) {\n        var ret = getObject(arg0).crypto;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_msCrypto_d003eebe62c636a9 = function(arg0) {\n        var ret = getObject(arg0).msCrypto;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newnoargs_f579424187aa1717 = function(arg0, arg1) {\n        var ret = new Function(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_call_89558c3e96703ca1 = function() { return handleError(function (arg0, arg1) {\n        var ret = getObject(arg0).call(getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbindgen_object_clone_ref = function(arg0) {\n        var ret = getObject(arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_self_e23d74ae45fb17d1 = function() { return handleError(function () {\n        var ret = self.self;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_window_b4be7f48b24ac56e = function() { return handleError(function () {\n        var ret = window.window;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_globalThis_d61b1f48a57191ae = function() { return handleError(function () {\n        var ret = globalThis.globalThis;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_global_e7669da72fd7f239 = function() { return handleError(function () {\n        var ret = global.global;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbindgen_is_undefined = function(arg0) {\n        var ret = getObject(arg0) === undefined;\n        return ret;\n    };\n    imports.wbg.__wbg_buffer_5e74a88a1424a2e0 = function(arg0) {\n        var ret = getObject(arg0).buffer;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_e3b800e570795b3c = function(arg0) {\n        var ret = new Uint8Array(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_5b8081e9d002f0df = function(arg0, arg1, arg2) {\n        getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n    };\n    imports.wbg.__wbg_length_30803400a8f15c59 = function(arg0) {\n        var ret = getObject(arg0).length;\n        return ret;\n    };\n    imports.wbg.__wbg_newwithlength_5f4ce114a24dfe1e = function(arg0) {\n        var ret = new Uint8Array(arg0 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_subarray_a68f835ca2af506f = function(arg0, arg1, arg2) {\n        var ret = getObject(arg0).subarray(arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_memory = function() {\n        var ret = wasm.memory;\n        return addHeapObject(ret);\n    };\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n\n\n    const { instance, module } = await load(await input, imports);\n\n    wasm = instance.exports;\n    init.__wbindgen_wasm_module = module;\n    wasm.__wbindgen_start();\n    return wasm;\n}\n\nexport default init;\n\n","module.exports = require('./helpers/bundle-url').getBundleURL('2WX22') + require('./helpers/bundle-manifest').resolve(\"6DeOB\");","/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType,\n} from \"./protocol\";\nexport { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\n\nconst throwMarker = Symbol(\"Comlink.thrown\");\n\n/**\n * Interface of values that were marked to be proxied with `comlink.proxy()`.\n * Can also be implemented by classes.\n */\nexport interface ProxyMarked {\n  [proxyMarker]: true;\n}\n\n/**\n * Takes a type and wraps it in a Promise, if it not already is one.\n * This is to avoid `Promise<Promise<T>>`.\n *\n * This is the inverse of `Unpromisify<T>`.\n */\ntype Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n/**\n * Takes a type that may be Promise and unwraps the Promise type.\n * If `P` is not a Promise, it returns `P`.\n *\n * This is the inverse of `Promisify<T>`.\n */\ntype Unpromisify<P> = P extends Promise<infer T> ? T : P;\n\n/**\n * Takes the raw type of a remote property and returns the type that is visible to the local thread on the proxy.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions.\n * See https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype RemoteProperty<T> =\n  // If the value is a method, comlink will proxy it automatically.\n  // Objects are only proxied if they are marked to be proxied.\n  // Otherwise, the property is converted to a Promise that resolves the cloned value.\n  T extends Function | ProxyMarked ? Remote<T> : Promisify<T>;\n\n/**\n * Takes the raw type of a property as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This is the inverse of `RemoteProperty<T>`.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype LocalProperty<T> = T extends Function | ProxyMarked\n  ? Local<T>\n  : Unpromisify<T>;\n\n/**\n * Proxies `T` if it is a `ProxyMarked`, clones it otherwise (as handled by structured cloning and transfer handlers).\n */\nexport type ProxyOrClone<T> = T extends ProxyMarked ? Remote<T> : T;\n/**\n * Inverse of `ProxyOrClone<T>`.\n */\nexport type UnproxyOrClone<T> = T extends RemoteObject<ProxyMarked>\n  ? Local<T>\n  : T;\n\n/**\n * Takes the raw type of a remote object in the other thread and returns the type as it is visible to the local thread\n * when proxied with `Comlink.proxy()`.\n *\n * This does not handle call signatures, which is handled by the more general `Remote<T>` type.\n *\n * @template T The raw type of a remote object as seen in the other thread.\n */\nexport type RemoteObject<T> = { [P in keyof T]: RemoteProperty<T[P]> };\n/**\n * Takes the type of an object as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This does not handle call signatures, which is handled by the more general `Local<T>` type.\n *\n * This is the inverse of `RemoteObject<T>`.\n *\n * @template T The type of a proxied object.\n */\nexport type LocalObject<T> = { [P in keyof T]: LocalProperty<T[P]> };\n\n/**\n * Additional special comlink methods available on each proxy returned by `Comlink.wrap()`.\n */\nexport interface ProxyMethods {\n  [createEndpoint]: () => Promise<MessagePort>;\n  [releaseProxy]: () => void;\n}\n\n/**\n * Takes the raw type of a remote object, function or class in the other thread and returns the type as it is visible to\n * the local thread from the proxy return value of `Comlink.wrap()` or `Comlink.proxy()`.\n */\nexport type Remote<T> =\n  // Handle properties\n  RemoteObject<T> &\n    // Handle call signature (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: UnproxyOrClone<TArguments[I]> }\n        ) => Promisify<ProxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: UnproxyOrClone<TArguments[I]>;\n            }\n          ): Promisify<Remote<TInstance>>;\n        }\n      : unknown) &\n    // Include additional special comlink methods available on the proxy.\n    ProxyMethods;\n\n/**\n * Expresses that a type can be either a sync or async.\n */\ntype MaybePromise<T> = Promise<T> | T;\n\n/**\n * Takes the raw type of a remote object, function or class as a remote thread would see it through a proxy (e.g. when\n * passed in as a function argument) and returns the type the local thread has to supply.\n *\n * This is the inverse of `Remote<T>`. It takes a `Remote<T>` and returns its original input `T`.\n */\nexport type Local<T> =\n  // Omit the special proxy methods (they don't need to be supplied, comlink adds them)\n  Omit<LocalObject<T>, keyof ProxyMethods> &\n    // Handle call signatures (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: ProxyOrClone<TArguments[I]> }\n        ) => // The raw function could either be sync or async, but is always proxied automatically\n        MaybePromise<UnproxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: ProxyOrClone<TArguments[I]>;\n            }\n          ): // The raw constructor could either be sync or async, but is always proxied automatically\n          MaybePromise<Local<Unpromisify<TInstance>>>;\n        }\n      : unknown);\n\nconst isObject = (val: unknown): val is object =>\n  (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n\n/**\n * Customizes the serialization of certain values as determined by `canHandle()`.\n *\n * @template T The input type being handled by this transfer handler.\n * @template S The serialized type sent over the wire.\n */\nexport interface TransferHandler<T, S> {\n  /**\n   * Gets called for every value to determine whether this transfer handler\n   * should serialize the value, which includes checking that it is of the right\n   * type (but can perform checks beyond that as well).\n   */\n  canHandle(value: unknown): value is T;\n\n  /**\n   * Gets called with the value if `canHandle()` returned `true` to produce a\n   * value that can be sent in a message, consisting of structured-cloneable\n   * values and/or transferrable objects.\n   */\n  serialize(value: T): [S, Transferable[]];\n\n  /**\n   * Gets called to deserialize an incoming value that was serialized in the\n   * other thread with this transfer handler (known through the name it was\n   * registered under).\n   */\n  deserialize(value: S): T;\n}\n\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler: TransferHandler<object, MessagePort> = {\n  canHandle: (val): val is ProxyMarked =>\n    isObject(val) && (val as ProxyMarked)[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  },\n};\n\ninterface ThrownValue {\n  [throwMarker]: unknown; // just needs to be present\n  value: unknown;\n}\ntype SerializedThrownValue =\n  | { isError: true; value: Error }\n  | { isError: false; value: unknown };\n\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler: TransferHandler<\n  ThrownValue,\n  SerializedThrownValue\n> = {\n  canHandle: (value): value is ThrownValue =>\n    isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized: SerializedThrownValue;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack,\n        },\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(\n        new Error(serialized.value.message),\n        serialized.value\n      );\n    }\n    throw serialized.value;\n  },\n};\n\n/**\n * Allows customizing the serialization of certain values.\n */\nexport const transferHandlers = new Map<\n  string,\n  TransferHandler<unknown, unknown>\n>([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler],\n]);\n\nexport function expose(obj: any, ep: Endpoint = self as any) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message),\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n        default:\n          return;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue)\n      .catch((value) => {\n        return { value, [throwMarker]: 0 };\n      })\n      .then((returnValue) => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n        }\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function () {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: MessageType.RELEASE,\n            path: path.map((p) => p.toString()),\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map((p) => p.toString()),\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map((p) => p.toString()),\n          value,\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT,\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n  });\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer<T>(obj: T, transfers: Transferable[]): T {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T>(obj: T): T & ProxyMarked {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = self,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context),\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue,\n        },\n        transferables,\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value,\n    },\n    transferCache.get(value) || [],\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n","import init, { WebVault, generatePassphrase } from \"sos-wasm\";\nimport * as Comlink from \"comlink\";\n\nexport { WebVault, generatePassphrase } from \"sos-wasm\";\n\nconsole.log(\"WORKER IS INITIALIZING...\");\n\nvoid (async function () {\n  // Requires top-level await experiment\n  await init();\n  console.log(\"Worker finished initializing\");\n  self.postMessage({ ready: true });\n})();\n\nComlink.expose({ WebVault, generatePassphrase });\n"],"names":["$8831245f07480bee$export$6503ec6e8aabbaf","$8831245f07480bee$export$f7ad0328861e2f03","$8831245f07480bee$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","$01a32f7bf710fe19$export$bdfd709ae4826697","$01a32f7bf710fe19$var$bundleURL","$01a32f7bf710fe19$var$getBaseURL","url","replace","value","err","matches","stack","match","$01a32f7bf710fe19$var$getBundleURL","parcelRequire","register","JSON","parse","$4ce57fe94e553770$var$wasm","$4ce57fe94e553770$var$cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","$4ce57fe94e553770$var$cachegetUint8Memory0","$4ce57fe94e553770$var$getUint8Memory0","buffer","memory","Uint8Array","$4ce57fe94e553770$var$getStringFromWasm0","ptr","len","subarray","$4ce57fe94e553770$var$heap","Array","fill","undefined","push","$4ce57fe94e553770$var$heap_next","$4ce57fe94e553770$var$addHeapObject","obj","idx","$4ce57fe94e553770$var$getObject","$4ce57fe94e553770$var$WASM_VECTOR_LEN","$4ce57fe94e553770$var$cachedTextEncoder","TextEncoder","$4ce57fe94e553770$var$encodeString","encodeInto","arg","view","buf","encode","set","read","written","$4ce57fe94e553770$var$passStringToWasm0","malloc","realloc","mem","offset","code","charCodeAt","slice","$4ce57fe94e553770$var$cachegetInt32Memory0","$4ce57fe94e553770$var$getInt32Memory0","Int32Array","$4ce57fe94e553770$var$takeObject","ret","$4ce57fe94e553770$var$dropObject","$4ce57fe94e553770$var$getArrayU8FromWasm0","$4ce57fe94e553770$export$99fa241f13f5e98b","words","retptr","__wbindgen_add_to_stack_pointer","generatePassphrase","r0","r1","$4ce57fe94e553770$var$handleError","f","args","apply","this","e","__wbindgen_exn_store","$4ce57fe94e553770$export$5d0716cc6c705ff6","static","create","prototype","__destroy_into_raw","free","__wbg_webvault_free","constructor","webvault_new","__wrap","initialize","label","password","webvault_initialize","importBuffer","webvault_importBuffer","getSecretIndex","webvault_getSecretIndex","webvault_id","webvault_label","createAccountPassword","request","webvault_createAccountPassword","createNote","webvault_createNote","createCredentials","webvault_createCredentials","createFileUpload","webvault_createFileUpload","unlock","passphrase","webvault_unlock","lock","webvault_lock","webvault_buffer","r2","v0","__wbindgen_free","$c7c9fc8d1fba3aba$exports","getBundleURL","resolve","$4ce57fe94e553770$export$2e2bcd8739ae039","async","$4ce57fe94e553770$var$init","input","URL","imports","wbg","__wbindgen_json_parse","arg0","arg1","__wbindgen_json_serialize","ptr0","stringify","__wbindgen_malloc","__wbindgen_realloc","len0","__wbindgen_error_new","__wbg_log_7b91984099667bb9","console","log","__wbindgen_object_drop_ref","__wbg_new_693216e109162396","__wbg_stack_0ddaca5d1abfb52f","__wbg_error_09919627ac0992f5","error","__wbg_randomFillSync_378e02b85af41ab6","arg2","randomFillSync","arguments","__wbg_getRandomValues_99bbe8a65f4aef87","getRandomValues","__wbg_process_5729605ce9d34ea8","process","__wbindgen_is_object","val","__wbg_versions_531e16e1a776ee97","versions","__wbg_node_18b58a160b60d170","node","__wbindgen_is_string","__wbg_static_accessor_NODE_MODULE_bdc5ca9096c68aeb","module","__wbg_require_edfaedd93e302925","require","__wbg_crypto_2bc4d5b05161de5b","crypto","__wbg_msCrypto_d003eebe62c636a9","msCrypto","__wbg_newnoargs_f579424187aa1717","Function","__wbg_call_89558c3e96703ca1","call","__wbindgen_object_clone_ref","__wbg_self_e23d74ae45fb17d1","self","__wbg_window_b4be7f48b24ac56e","window","__wbg_globalThis_d61b1f48a57191ae","globalThis","__wbg_global_e7669da72fd7f239","$parcel$global","global","__wbindgen_is_undefined","__wbg_buffer_5e74a88a1424a2e0","__wbg_new_e3b800e570795b3c","__wbg_set_5b8081e9d002f0df","__wbg_length_30803400a8f15c59","__wbg_newwithlength_5f4ce114a24dfe1e","__wbg_subarray_a68f835ca2af506f","__wbindgen_throw","__wbindgen_memory","Request","fetch","instance","Response","WebAssembly","instantiateStreaming","headers","get","warn","bytes","arrayBuffer","instantiate","Instance","$4ce57fe94e553770$var$load","exports","__wbindgen_wasm_module","__wbindgen_start","$9d65ffd50b68f22a$export$be5234c0b764b6e0","Symbol","$9d65ffd50b68f22a$export$ab8f1c00731ee83e","Map","$9d65ffd50b68f22a$var$isObject","port1","port2","MessageChannel","$9d65ffd50b68f22a$export$9b7f6e342a8cbd38","port","target","$9d65ffd50b68f22a$var$throwMarker","serialized","isError","message","name","deserialize","assign","obj1","ep","callback","ev","data","type","path","argumentList","map","$9d65ffd50b68f22a$var$fromWireValue","reduce","prop","rawValue","returnValue1","parent","transfers","$9d65ffd50b68f22a$var$transferCache","$9d65ffd50b68f22a$export$c9b234447cf4ef7c","value1","Promise","catch","then","returnValue","wireValue","transferables","$9d65ffd50b68f22a$var$toWireValue","postMessage","removeEventListener","$9d65ffd50b68f22a$var$closeEndPoint","start","endpoint","close","isReleased","Proxy","isProxyReleased","$9d65ffd50b68f22a$export$89981d4b8d9f48aa","$9d65ffd50b68f22a$var$requestResponseMessage","p","toString","r","bind","$9d65ffd50b68f22a$var$createProxy","_target","$9d65ffd50b68f22a$var$throwIfProxyReleased","_thisArg","rawArgumentList","last","$9d65ffd50b68f22a$export$39fb953702b7fcd7","$9d65ffd50b68f22a$var$processArguments","construct","$9d65ffd50b68f22a$export$923f96dd5afa9ce6","processed","v","arr","concat","WeakMap","handler","canHandle","serializedValue","serialize","msg","ready","WebVault"],"version":3,"file":"worker.6ff1219b.js.map"}