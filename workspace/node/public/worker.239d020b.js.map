{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@saveoursecrets/wasm-bindings/wasm_bindings.js","node_modules/@parcel/runtime-js/lib/runtime-dd191b758a59a517.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-cedac1b81b008410.js","src/worker.ts","node_modules/comlink/src/comlink.ts"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","\nlet wasm;\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nconst cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachedUint8Memory0 = new Uint8Array();\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst cachedTextEncoder = new TextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachedInt32Memory0 = new Int32Array();\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nfunction makeMutClosure(arg0, arg1, dtor, f) {\n    const state = { a: arg0, b: arg1, cnt: 1, dtor };\n    const real = (...args) => {\n        // First up with a closure we increment the internal reference\n        // count. This ensures that the Rust closure environment won't\n        // be deallocated while we're invoking it.\n        state.cnt++;\n        const a = state.a;\n        state.a = 0;\n        try {\n            return f(a, state.b, ...args);\n        } finally {\n            if (--state.cnt === 0) {\n                wasm.__wbindgen_export_2.get(state.dtor)(a, state.b);\n\n            } else {\n                state.a = a;\n            }\n        }\n    };\n    real.original = state;\n\n    return real;\n}\nfunction __wbg_adapter_32(arg0, arg1, arg2) {\n    wasm._dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__hf87b2e080f91788a(arg0, arg1, addHeapObject(arg2));\n}\n\n/**\n* Generate a passphrase using the diceware module.\n* @param {number} words\n* @returns {any}\n*/\nexport function generatePassphrase(words) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.generatePassphrase(retptr, words);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return takeObject(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n*/\nexport function start() {\n    wasm.start();\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\nfunction __wbg_adapter_145(arg0, arg1, arg2, arg3) {\n    wasm.wasm_bindgen__convert__closures__invoke2_mut__h52648a0ee74be238(arg0, arg1, addHeapObject(arg2), addHeapObject(arg3));\n}\n\n/**\n* Store the state for a new account signup.\n*/\nexport class Signup {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Signup.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_signup_free(ptr);\n    }\n    /**\n    * Create a signup for a new account.\n    */\n    constructor() {\n        const ret = wasm.signup_new();\n        return Signup.__wrap(ret);\n    }\n    /**\n    * Set the passphrase for the key generation.\n    * @param {any} passphrase\n    */\n    setKeystorePassphrase(passphrase) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.signup_setKeystorePassphrase(retptr, this.ptr, addHeapObject(passphrase));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Verfy the passphrase for the key store.\n    * @param {any} passphrase\n    */\n    verifyKeyStorePassphrase(passphrase) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.signup_verifyKeyStorePassphrase(retptr, this.ptr, addHeapObject(passphrase));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Set the passphrase for vault encryption.\n    * @param {any} passphrase\n    */\n    setEncryptionPassphrase(passphrase) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.signup_setEncryptionPassphrase(retptr, this.ptr, addHeapObject(passphrase));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Verfy the passphrase for vault encryption.\n    * @param {any} passphrase\n    */\n    verifyEncryptionPassphrase(passphrase) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.signup_verifyEncryptionPassphrase(retptr, this.ptr, addHeapObject(passphrase));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Get the keystore so the user can download it to disc.\n    * @returns {any}\n    */\n    getKeyStore() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.signup_getKeyStore(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Create the client for communication with the remote node.\n    * @param {any} server\n    * @returns {Promise<any>}\n    */\n    createClient(server) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.signup_createClient(retptr, this.ptr, addHeapObject(server));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Create the account on a remote node.\n    * @returns {Promise<any>}\n    */\n    createAccount() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.signup_createAccount(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Take the keystore and keystore passphrase so that the caller\n    * can automatically create a WebCache for login when signup is\n    * completed.\n    * @returns {any}\n    */\n    takeKeyStore() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.signup_takeKeyStore(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Dispose of the internal state.\n    */\n    dispose() {\n        wasm.signup_dispose(this.ptr);\n    }\n}\n/**\n* Binding to the node cache.\n*/\nexport class WebCache {\n\n    static __wrap(ptr) {\n        const obj = Object.create(WebCache.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_webcache_free(ptr);\n    }\n    /**\n    * Create a new web cache.\n    */\n    constructor() {\n        const ret = wasm.webcache_new();\n        return WebCache.__wrap(ret);\n    }\n    /**\n    * Connect to a server using the given keystore and passphrase for\n    * a single party signing key.\n    * @param {any} server\n    * @param {any} keystore\n    * @param {any} passphrase\n    * @returns {Promise<any>}\n    */\n    connect(server, keystore, passphrase) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.webcache_connect(retptr, this.ptr, addHeapObject(server), addHeapObject(keystore), addHeapObject(passphrase));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Get the URL for a changes feed.\n    * @returns {Promise<any>}\n    */\n    changesFeedUrl() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.webcache_changesFeedUrl(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Handle an incoming change notification.\n    * @param {any} buffer\n    * @returns {Promise<any>}\n    */\n    handleChange(buffer) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.webcache_handleChange(retptr, this.ptr, addHeapObject(buffer));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Pull the current vault.\n    * @param {any} force\n    * @returns {Promise<any>}\n    */\n    pull(force) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.webcache_pull(retptr, this.ptr, addHeapObject(force));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Load vaults.\n    * @returns {Promise<any>}\n    */\n    listVaults() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.webcache_listVaults(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Create a vault.\n    * @param {any} name\n    * @param {any} passphrase\n    * @returns {Promise<any>}\n    */\n    createVault(name, passphrase) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.webcache_createVault(retptr, this.ptr, addHeapObject(name), addHeapObject(passphrase));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Open a vault.\n    * @param {any} summary\n    * @param {any} passphrase\n    * @returns {Promise<any>}\n    */\n    openVault(summary, passphrase) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.webcache_openVault(retptr, this.ptr, addHeapObject(summary), addHeapObject(passphrase));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Close a vault.\n    */\n    closeVault() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.webcache_closeVault(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Get the meta data for the vault.\n    * @returns {any}\n    */\n    getVaultMeta() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.webcache_getVaultMeta(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Find all secret meta with the given label and ignore\n    * a particular identifier.\n    * @param {any} name\n    * @param {any} id\n    * @returns {any}\n    */\n    findByLabel(name, id) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.webcache_findByLabel(retptr, this.ptr, addHeapObject(name), addHeapObject(id));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Query the search index and retrieve mapped documents.\n    * @param {any} needle\n    * @returns {any}\n    */\n    queryMap(needle) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.webcache_queryMap(retptr, this.ptr, addHeapObject(needle));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Create a new secret.\n    * @param {any} request\n    * @returns {Promise<any>}\n    */\n    createSecret(request) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.webcache_createSecret(retptr, this.ptr, addHeapObject(request));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Get a secret from the vault.\n    * @param {any} id\n    * @returns {any}\n    */\n    readSecret(id) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.webcache_readSecret(retptr, this.ptr, addHeapObject(id));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Update a secret.\n    * @param {any} request\n    * @returns {Promise<any>}\n    */\n    updateSecret(request) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.webcache_updateSecret(retptr, this.ptr, addHeapObject(request));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Delete a secret.\n    * @param {any} id\n    * @returns {Promise<any>}\n    */\n    deleteSecret(id) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.webcache_deleteSecret(retptr, this.ptr, addHeapObject(id));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Remove a vault.\n    * @param {any} summary\n    * @returns {Promise<any>}\n    */\n    removeVault(summary) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.webcache_removeVault(retptr, this.ptr, addHeapObject(summary));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Rename a vault.\n    * @param {any} summary\n    * @param {any} name\n    * @returns {Promise<any>}\n    */\n    renameVault(summary, name) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.webcache_renameVault(retptr, this.ptr, addHeapObject(summary), addHeapObject(name));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Attempt to change the password for this vault.\n    * @param {any} current_passphrase\n    * @param {any} new_passphrase\n    * @returns {Promise<any>}\n    */\n    changePassphrase(current_passphrase, new_passphrase) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.webcache_changePassphrase(retptr, this.ptr, addHeapObject(current_passphrase), addHeapObject(new_passphrase));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Verify an encryption passphrase for the current vault.\n    * @param {any} passphrase\n    */\n    verify(passphrase) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.webcache_verify(retptr, this.ptr, addHeapObject(passphrase));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Unlock the vault and return the vault meta data.\n    * @param {any} passphrase\n    * @returns {any}\n    */\n    unlock(passphrase) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.webcache_unlock(retptr, this.ptr, addHeapObject(passphrase));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Get a buffer of the current vault.\n    * @returns {Uint8Array}\n    */\n    buffer() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.webcache_buffer(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            var r3 = getInt32Memory0()[retptr / 4 + 3];\n            if (r3) {\n                throw takeObject(r2);\n            }\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n\nasync function load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction getImports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbindgen_json_parse = function(arg0, arg1) {\n        const ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_json_serialize = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        const ret = JSON.stringify(obj === undefined ? null : obj);\n        const ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbindgen_error_new = function(arg0, arg1) {\n        const ret = new Error(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_cb_drop = function(arg0) {\n        const obj = takeObject(arg0).original;\n        if (obj.cnt-- == 1) {\n            obj.a = 0;\n            return true;\n        }\n        const ret = false;\n        return ret;\n    };\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        const ret = getStringFromWasm0(arg0, arg1);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_693216e109162396 = function() {\n        const ret = new Error();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_stack_0ddaca5d1abfb52f = function(arg0, arg1) {\n        const ret = getObject(arg1).stack;\n        const ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbg_error_09919627ac0992f5 = function(arg0, arg1) {\n        try {\n            console.error(getStringFromWasm0(arg0, arg1));\n        } finally {\n            wasm.__wbindgen_free(arg0, arg1);\n        }\n    };\n    imports.wbg.__wbindgen_object_clone_ref = function(arg0) {\n        const ret = getObject(arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_fetch_b1379d93c1e2b015 = function(arg0) {\n        const ret = fetch(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_debug_1dccd22b8a8988e1 = function(arg0, arg1, arg2, arg3) {\n        console.debug(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n    };\n    imports.wbg.__wbg_error_800b8d466653f7ea = function(arg0) {\n        console.error(getObject(arg0));\n    };\n    imports.wbg.__wbg_error_d539c0f5eafe6a31 = function(arg0, arg1, arg2, arg3) {\n        console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n    };\n    imports.wbg.__wbg_info_17d18b9f8eaab7d9 = function(arg0, arg1, arg2, arg3) {\n        console.info(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n    };\n    imports.wbg.__wbg_log_f286f3fe4aad906d = function(arg0, arg1, arg2, arg3) {\n        console.log(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n    };\n    imports.wbg.__wbg_warn_3d6689f77cb29c86 = function(arg0, arg1, arg2, arg3) {\n        console.warn(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n    };\n    imports.wbg.__wbindgen_string_get = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        const ret = typeof(obj) === 'string' ? obj : undefined;\n        var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbg_fetch_17b968b9c79d3c56 = function(arg0, arg1) {\n        const ret = getObject(arg0).fetch(getObject(arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_instanceof_Response_240e67e5796c3c6b = function(arg0) {\n        const ret = getObject(arg0) instanceof Response;\n        return ret;\n    };\n    imports.wbg.__wbg_url_0f503b904b694ff5 = function(arg0, arg1) {\n        const ret = getObject(arg1).url;\n        const ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbg_status_9067c6a4fdd064c9 = function(arg0) {\n        const ret = getObject(arg0).status;\n        return ret;\n    };\n    imports.wbg.__wbg_headers_aa309e800cf75016 = function(arg0) {\n        const ret = getObject(arg0).headers;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_arrayBuffer_ccd485f4d2929b08 = function() { return handleError(function (arg0) {\n        const ret = getObject(arg0).arrayBuffer();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_newwithstrandinit_de7c409ec8538105 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = new Request(getStringFromWasm0(arg0, arg1), getObject(arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_new_4cba26249c1686cd = function() { return handleError(function () {\n        const ret = new Headers();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_append_9c6d4d7f71076e48 = function() { return handleError(function (arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).append(getStringFromWasm0(arg1, arg2), getStringFromWasm0(arg3, arg4));\n    }, arguments) };\n    imports.wbg.__wbg_randomFillSync_91e2b39becca6147 = function() { return handleError(function (arg0, arg1, arg2) {\n        getObject(arg0).randomFillSync(getArrayU8FromWasm0(arg1, arg2));\n    }, arguments) };\n    imports.wbg.__wbg_getRandomValues_b14734aa289bc356 = function() { return handleError(function (arg0, arg1) {\n        getObject(arg0).getRandomValues(getObject(arg1));\n    }, arguments) };\n    imports.wbg.__wbg_process_e56fd54cf6319b6c = function(arg0) {\n        const ret = getObject(arg0).process;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_is_object = function(arg0) {\n        const val = getObject(arg0);\n        const ret = typeof(val) === 'object' && val !== null;\n        return ret;\n    };\n    imports.wbg.__wbg_versions_77e21455908dad33 = function(arg0) {\n        const ret = getObject(arg0).versions;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_node_0dd25d832e4785d5 = function(arg0) {\n        const ret = getObject(arg0).node;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_is_string = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'string';\n        return ret;\n    };\n    imports.wbg.__wbg_static_accessor_NODE_MODULE_26b231378c1be7dd = function() {\n        const ret = module;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_require_0db1598d9ccecb30 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = getObject(arg0).require(getStringFromWasm0(arg1, arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_crypto_b95d7173266618a9 = function(arg0) {\n        const ret = getObject(arg0).crypto;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_msCrypto_5a86d77a66230f81 = function(arg0) {\n        const ret = getObject(arg0).msCrypto;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_is_function = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'function';\n        return ret;\n    };\n    imports.wbg.__wbg_newnoargs_971e9a5abe185139 = function(arg0, arg1) {\n        const ret = new Function(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_next_726d1c2255989269 = function(arg0) {\n        const ret = getObject(arg0).next;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_next_3d0c4cc33e7418c9 = function() { return handleError(function (arg0) {\n        const ret = getObject(arg0).next();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_done_e5655b169bb04f60 = function(arg0) {\n        const ret = getObject(arg0).done;\n        return ret;\n    };\n    imports.wbg.__wbg_value_8f901bca1014f843 = function(arg0) {\n        const ret = getObject(arg0).value;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_iterator_22ed2b976832ff0c = function() {\n        const ret = Symbol.iterator;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_get_72332cd2bc57924c = function() { return handleError(function (arg0, arg1) {\n        const ret = Reflect.get(getObject(arg0), getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_call_33d7bcddbbfa394a = function() { return handleError(function (arg0, arg1) {\n        const ret = getObject(arg0).call(getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_new_e6a9fecc2bf26696 = function() {\n        const ret = new Object();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_self_fd00a1ef86d1b2ed = function() { return handleError(function () {\n        const ret = self.self;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_window_6f6e346d8bbd61d7 = function() { return handleError(function () {\n        const ret = window.window;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_globalThis_3348936ac49df00a = function() { return handleError(function () {\n        const ret = globalThis.globalThis;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_global_67175caf56f55ca9 = function() { return handleError(function () {\n        const ret = global.global;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbindgen_is_undefined = function(arg0) {\n        const ret = getObject(arg0) === undefined;\n        return ret;\n    };\n    imports.wbg.__wbg_call_65af9f665ab6ade5 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = getObject(arg0).call(getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_getTime_58b0bdbebd4ef11d = function(arg0) {\n        const ret = getObject(arg0).getTime();\n        return ret;\n    };\n    imports.wbg.__wbg_new0_adda2d4bcb124f0a = function() {\n        const ret = new Date();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_52205195aa880fc2 = function(arg0, arg1) {\n        try {\n            var state0 = {a: arg0, b: arg1};\n            var cb0 = (arg0, arg1) => {\n                const a = state0.a;\n                state0.a = 0;\n                try {\n                    return __wbg_adapter_145(a, state0.b, arg0, arg1);\n                } finally {\n                    state0.a = a;\n                }\n            };\n            const ret = new Promise(cb0);\n            return addHeapObject(ret);\n        } finally {\n            state0.a = state0.b = 0;\n        }\n    };\n    imports.wbg.__wbg_resolve_0107b3a501450ba0 = function(arg0) {\n        const ret = Promise.resolve(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_then_18da6e5453572fc8 = function(arg0, arg1) {\n        const ret = getObject(arg0).then(getObject(arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_then_e5489f796341454b = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).then(getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_buffer_34f5ec9f8a838ba0 = function(arg0) {\n        const ret = getObject(arg0).buffer;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_88fdad741db1b182 = function(arg0, arg1, arg2) {\n        const ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_cda198d9dbc6d7ea = function(arg0) {\n        const ret = new Uint8Array(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_1a930cfcda1a8067 = function(arg0, arg1, arg2) {\n        getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n    };\n    imports.wbg.__wbg_length_51f19f73d6d9eff3 = function(arg0) {\n        const ret = getObject(arg0).length;\n        return ret;\n    };\n    imports.wbg.__wbg_newwithlength_66e5530e7079ea1b = function(arg0) {\n        const ret = new Uint8Array(arg0 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_subarray_270ff8dd5582c1ac = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).subarray(arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_has_3be27932089d278e = function() { return handleError(function (arg0, arg1) {\n        const ret = Reflect.has(getObject(arg0), getObject(arg1));\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_set_2762e698c2f5b7e0 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = Reflect.set(getObject(arg0), getObject(arg1), getObject(arg2));\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_stringify_d8d1ee75d5b55ce4 = function() { return handleError(function (arg0) {\n        const ret = JSON.stringify(getObject(arg0));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbindgen_debug_string = function(arg0, arg1) {\n        const ret = debugString(getObject(arg1));\n        const ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_memory = function() {\n        const ret = wasm.memory;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_closure_wrapper1428 = function(arg0, arg1, arg2) {\n        const ret = makeMutClosure(arg0, arg1, 395, __wbg_adapter_32);\n        return addHeapObject(ret);\n    };\n\n    return imports;\n}\n\nfunction initMemory(imports, maybe_memory) {\n\n}\n\nfunction finalizeInit(instance, module) {\n    wasm = instance.exports;\n    init.__wbindgen_wasm_module = module;\n    cachedInt32Memory0 = new Int32Array();\n    cachedUint8Memory0 = new Uint8Array();\n\n    wasm.__wbindgen_start();\n    return wasm;\n}\n\nfunction initSync(bytes) {\n    const imports = getImports();\n\n    initMemory(imports);\n\n    const module = new WebAssembly.Module(bytes);\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return finalizeInit(instance, module);\n}\n\nasync function init(input) {\n    if (typeof input === 'undefined') {\n        input = new URL('wasm_bindings_bg.wasm', import.meta.url);\n    }\n    const imports = getImports();\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n    initMemory(imports);\n\n    const { instance, module } = await load(await input, imports);\n\n    return finalizeInit(instance, module);\n}\n\nexport { initSync }\nexport default init;\n","module.exports = require('./helpers/bundle-url').getBundleURL('2WX22') + require('./helpers/bundle-manifest').resolve(\"gOZR0\");","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"2WX22\\\":\\\"worker.239d020b.js\\\",\\\"gOZR0\\\":\\\"wasm_bindings_bg.8b73f8c3.wasm\\\"}\"));","import init, {\n  WebCache,\n  Signup,\n  generatePassphrase,\n} from \"@saveoursecrets/wasm-bindings\";\nimport * as Comlink from \"comlink\";\n\nvoid (async function () {\n  // Requires top-level await experiment\n  await init();\n  console.log(\"Worker finished initializing\");\n  self.postMessage({ ready: true });\n})();\n\nComlink.expose({ WebCache, Signup, generatePassphrase });\n","/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType,\n} from \"./protocol\";\nexport { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\n\nconst throwMarker = Symbol(\"Comlink.thrown\");\n\n/**\n * Interface of values that were marked to be proxied with `comlink.proxy()`.\n * Can also be implemented by classes.\n */\nexport interface ProxyMarked {\n  [proxyMarker]: true;\n}\n\n/**\n * Takes a type and wraps it in a Promise, if it not already is one.\n * This is to avoid `Promise<Promise<T>>`.\n *\n * This is the inverse of `Unpromisify<T>`.\n */\ntype Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n/**\n * Takes a type that may be Promise and unwraps the Promise type.\n * If `P` is not a Promise, it returns `P`.\n *\n * This is the inverse of `Promisify<T>`.\n */\ntype Unpromisify<P> = P extends Promise<infer T> ? T : P;\n\n/**\n * Takes the raw type of a remote property and returns the type that is visible to the local thread on the proxy.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions.\n * See https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype RemoteProperty<T> =\n  // If the value is a method, comlink will proxy it automatically.\n  // Objects are only proxied if they are marked to be proxied.\n  // Otherwise, the property is converted to a Promise that resolves the cloned value.\n  T extends Function | ProxyMarked ? Remote<T> : Promisify<T>;\n\n/**\n * Takes the raw type of a property as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This is the inverse of `RemoteProperty<T>`.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype LocalProperty<T> = T extends Function | ProxyMarked\n  ? Local<T>\n  : Unpromisify<T>;\n\n/**\n * Proxies `T` if it is a `ProxyMarked`, clones it otherwise (as handled by structured cloning and transfer handlers).\n */\nexport type ProxyOrClone<T> = T extends ProxyMarked ? Remote<T> : T;\n/**\n * Inverse of `ProxyOrClone<T>`.\n */\nexport type UnproxyOrClone<T> = T extends RemoteObject<ProxyMarked>\n  ? Local<T>\n  : T;\n\n/**\n * Takes the raw type of a remote object in the other thread and returns the type as it is visible to the local thread\n * when proxied with `Comlink.proxy()`.\n *\n * This does not handle call signatures, which is handled by the more general `Remote<T>` type.\n *\n * @template T The raw type of a remote object as seen in the other thread.\n */\nexport type RemoteObject<T> = { [P in keyof T]: RemoteProperty<T[P]> };\n/**\n * Takes the type of an object as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This does not handle call signatures, which is handled by the more general `Local<T>` type.\n *\n * This is the inverse of `RemoteObject<T>`.\n *\n * @template T The type of a proxied object.\n */\nexport type LocalObject<T> = { [P in keyof T]: LocalProperty<T[P]> };\n\n/**\n * Additional special comlink methods available on each proxy returned by `Comlink.wrap()`.\n */\nexport interface ProxyMethods {\n  [createEndpoint]: () => Promise<MessagePort>;\n  [releaseProxy]: () => void;\n}\n\n/**\n * Takes the raw type of a remote object, function or class in the other thread and returns the type as it is visible to\n * the local thread from the proxy return value of `Comlink.wrap()` or `Comlink.proxy()`.\n */\nexport type Remote<T> =\n  // Handle properties\n  RemoteObject<T> &\n    // Handle call signature (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: UnproxyOrClone<TArguments[I]> }\n        ) => Promisify<ProxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: UnproxyOrClone<TArguments[I]>;\n            }\n          ): Promisify<Remote<TInstance>>;\n        }\n      : unknown) &\n    // Include additional special comlink methods available on the proxy.\n    ProxyMethods;\n\n/**\n * Expresses that a type can be either a sync or async.\n */\ntype MaybePromise<T> = Promise<T> | T;\n\n/**\n * Takes the raw type of a remote object, function or class as a remote thread would see it through a proxy (e.g. when\n * passed in as a function argument) and returns the type the local thread has to supply.\n *\n * This is the inverse of `Remote<T>`. It takes a `Remote<T>` and returns its original input `T`.\n */\nexport type Local<T> =\n  // Omit the special proxy methods (they don't need to be supplied, comlink adds them)\n  Omit<LocalObject<T>, keyof ProxyMethods> &\n    // Handle call signatures (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: ProxyOrClone<TArguments[I]> }\n        ) => // The raw function could either be sync or async, but is always proxied automatically\n        MaybePromise<UnproxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: ProxyOrClone<TArguments[I]>;\n            }\n          ): // The raw constructor could either be sync or async, but is always proxied automatically\n          MaybePromise<Local<Unpromisify<TInstance>>>;\n        }\n      : unknown);\n\nconst isObject = (val: unknown): val is object =>\n  (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n\n/**\n * Customizes the serialization of certain values as determined by `canHandle()`.\n *\n * @template T The input type being handled by this transfer handler.\n * @template S The serialized type sent over the wire.\n */\nexport interface TransferHandler<T, S> {\n  /**\n   * Gets called for every value to determine whether this transfer handler\n   * should serialize the value, which includes checking that it is of the right\n   * type (but can perform checks beyond that as well).\n   */\n  canHandle(value: unknown): value is T;\n\n  /**\n   * Gets called with the value if `canHandle()` returned `true` to produce a\n   * value that can be sent in a message, consisting of structured-cloneable\n   * values and/or transferrable objects.\n   */\n  serialize(value: T): [S, Transferable[]];\n\n  /**\n   * Gets called to deserialize an incoming value that was serialized in the\n   * other thread with this transfer handler (known through the name it was\n   * registered under).\n   */\n  deserialize(value: S): T;\n}\n\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler: TransferHandler<object, MessagePort> = {\n  canHandle: (val): val is ProxyMarked =>\n    isObject(val) && (val as ProxyMarked)[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  },\n};\n\ninterface ThrownValue {\n  [throwMarker]: unknown; // just needs to be present\n  value: unknown;\n}\ntype SerializedThrownValue =\n  | { isError: true; value: Error }\n  | { isError: false; value: unknown };\n\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler: TransferHandler<\n  ThrownValue,\n  SerializedThrownValue\n> = {\n  canHandle: (value): value is ThrownValue =>\n    isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized: SerializedThrownValue;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack,\n        },\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(\n        new Error(serialized.value.message),\n        serialized.value\n      );\n    }\n    throw serialized.value;\n  },\n};\n\n/**\n * Allows customizing the serialization of certain values.\n */\nexport const transferHandlers = new Map<\n  string,\n  TransferHandler<unknown, unknown>\n>([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler],\n]);\n\nexport function expose(obj: any, ep: Endpoint = self as any) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message),\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n        default:\n          return;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue)\n      .catch((value) => {\n        return { value, [throwMarker]: 0 };\n      })\n      .then((returnValue) => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n        }\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function () {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: MessageType.RELEASE,\n            path: path.map((p) => p.toString()),\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map((p) => p.toString()),\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map((p) => p.toString()),\n          value,\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT,\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n  });\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer<T>(obj: T, transfers: Transferable[]): T {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T>(obj: T): T & ProxyMarked {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = self,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context),\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue,\n        },\n        transferables,\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value,\n    },\n    transferCache.get(value) || [],\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n"],"names":["$8831245f07480bee$export$6503ec6e8aabbaf","$8831245f07480bee$export$f7ad0328861e2f03","$8831245f07480bee$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","wasm","heap","Array","fill","undefined","getObject","idx","push","heap_next","takeObject","ret","dropObject","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","cachedUint8Memory0","Uint8Array","getUint8Memory0","byteLength","memory","buffer","getStringFromWasm0","ptr","len","subarray","addHeapObject","obj","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","passStringToWasm0","malloc","realloc","mem","offset","code","charCodeAt","slice","cachedInt32Memory0","Int32Array","getInt32Memory0","debugString","val","type","description","name","isArray","debug","builtInMatches","exec","toString","call","className","JSON","stringify","_","message","stack","__wbg_adapter_32","arg0","arg1","arg2","_dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__hf87b2e080f91788a","generatePassphrase","words","retptr","__wbindgen_add_to_stack_pointer","r0","r1","start","getArrayU8FromWasm0","handleError","f","args","apply","this","e","__wbindgen_exn_store","Signup","static","create","prototype","__destroy_into_raw","free","__wbg_signup_free","constructor","signup_new","__wrap","setKeystorePassphrase","passphrase","signup_setKeystorePassphrase","verifyKeyStorePassphrase","signup_verifyKeyStorePassphrase","setEncryptionPassphrase","signup_setEncryptionPassphrase","verifyEncryptionPassphrase","signup_verifyEncryptionPassphrase","getKeyStore","signup_getKeyStore","createClient","server","signup_createClient","createAccount","signup_createAccount","takeKeyStore","signup_takeKeyStore","dispose","signup_dispose","WebCache","__wbg_webcache_free","webcache_new","connect","keystore","webcache_connect","changesFeedUrl","webcache_changesFeedUrl","handleChange","webcache_handleChange","pull","force","webcache_pull","listVaults","webcache_listVaults","createVault","webcache_createVault","openVault","summary","webcache_openVault","closeVault","webcache_closeVault","getVaultMeta","webcache_getVaultMeta","findByLabel","webcache_findByLabel","queryMap","needle","webcache_queryMap","createSecret","request","webcache_createSecret","readSecret","webcache_readSecret","updateSecret","webcache_updateSecret","deleteSecret","webcache_deleteSecret","removeVault","webcache_removeVault","renameVault","webcache_renameVault","changePassphrase","current_passphrase","new_passphrase","webcache_changePassphrase","verify","webcache_verify","unlock","webcache_unlock","webcache_buffer","r2","v0","__wbindgen_free","getImports","imports","wbg","__wbindgen_object_drop_ref","__wbindgen_json_parse","parse","__wbindgen_json_serialize","ptr0","__wbindgen_malloc","__wbindgen_realloc","len0","__wbindgen_error_new","__wbindgen_cb_drop","original","cnt","a","__wbindgen_string_new","__wbg_new_693216e109162396","__wbg_stack_0ddaca5d1abfb52f","__wbg_error_09919627ac0992f5","console","error","__wbindgen_object_clone_ref","__wbg_fetch_b1379d93c1e2b015","fetch","__wbg_debug_1dccd22b8a8988e1","arg3","__wbg_error_800b8d466653f7ea","__wbg_error_d539c0f5eafe6a31","__wbg_info_17d18b9f8eaab7d9","info","__wbg_log_f286f3fe4aad906d","log","__wbg_warn_3d6689f77cb29c86","warn","__wbindgen_string_get","x","__wbg_fetch_17b968b9c79d3c56","__wbg_instanceof_Response_240e67e5796c3c6b","Response","__wbg_url_0f503b904b694ff5","url","__wbg_status_9067c6a4fdd064c9","status","__wbg_headers_aa309e800cf75016","headers","__wbg_arrayBuffer_ccd485f4d2929b08","arrayBuffer","arguments","__wbg_newwithstrandinit_de7c409ec8538105","Request","__wbg_new_4cba26249c1686cd","Headers","__wbg_append_9c6d4d7f71076e48","arg4","append","__wbg_randomFillSync_91e2b39becca6147","randomFillSync","__wbg_getRandomValues_b14734aa289bc356","getRandomValues","__wbg_process_e56fd54cf6319b6c","process","__wbindgen_is_object","__wbg_versions_77e21455908dad33","versions","__wbg_node_0dd25d832e4785d5","node","__wbindgen_is_string","__wbg_static_accessor_NODE_MODULE_26b231378c1be7dd","module","__wbg_require_0db1598d9ccecb30","require","__wbg_crypto_b95d7173266618a9","crypto","__wbg_msCrypto_5a86d77a66230f81","msCrypto","__wbindgen_is_function","__wbg_newnoargs_971e9a5abe185139","Function","__wbg_next_726d1c2255989269","next","__wbg_next_3d0c4cc33e7418c9","__wbg_done_e5655b169bb04f60","done","__wbg_value_8f901bca1014f843","value","__wbg_iterator_22ed2b976832ff0c","Symbol","iterator","__wbg_get_72332cd2bc57924c","Reflect","get","__wbg_call_33d7bcddbbfa394a","__wbg_new_e6a9fecc2bf26696","__wbg_self_fd00a1ef86d1b2ed","self","__wbg_window_6f6e346d8bbd61d7","window","__wbg_globalThis_3348936ac49df00a","globalThis","__wbg_global_67175caf56f55ca9","$parcel$global","global","__wbindgen_is_undefined","__wbg_call_65af9f665ab6ade5","__wbg_getTime_58b0bdbebd4ef11d","getTime","__wbg_new0_adda2d4bcb124f0a","Date","__wbg_new_52205195aa880fc2","arg01","arg11","state0","b","Promise","wasm_bindgen__convert__closures__invoke2_mut__h52648a0ee74be238","__wbg_adapter_145","__wbg_resolve_0107b3a501450ba0","resolve","__wbg_then_18da6e5453572fc8","then","__wbg_then_e5489f796341454b","__wbg_buffer_34f5ec9f8a838ba0","__wbg_newwithbyteoffsetandlength_88fdad741db1b182","__wbg_new_cda198d9dbc6d7ea","__wbg_set_1a930cfcda1a8067","__wbg_length_51f19f73d6d9eff3","__wbg_newwithlength_66e5530e7079ea1b","__wbg_subarray_270ff8dd5582c1ac","__wbg_has_3be27932089d278e","has","__wbg_set_2762e698c2f5b7e0","__wbg_stringify_d8d1ee75d5b55ce4","__wbindgen_debug_string","__wbindgen_throw","__wbindgen_memory","__wbindgen_closure_wrapper1428","dtor","state","real","__wbindgen_export_2","makeMutClosure","finalizeInit","instance","exports","init","__wbindgen_wasm_module","__wbindgen_start","initSync","bytes","WebAssembly","Module","Instance","async","input","URL","parcelRequire","instantiateStreaming","instantiate","load","$eb6dd4f72cd31200$export$2e2bcd8739ae039","getBundleURL","$01a32f7bf710fe19$export$bdfd709ae4826697","$01a32f7bf710fe19$var$bundleURL","$01a32f7bf710fe19$var$getBaseURL","replace","err","matches","match","$01a32f7bf710fe19$var$getBundleURL","register","$kdbmf","$9d65ffd50b68f22a$export$ab8f1c00731ee83e","Map","$9d65ffd50b68f22a$var$isObject","$9d65ffd50b68f22a$export$be5234c0b764b6e0","port1","port2","MessageChannel","$9d65ffd50b68f22a$export$9b7f6e342a8cbd38","port","target","$9d65ffd50b68f22a$var$throwMarker","serialized","isError","deserialize","assign","obj1","ep","callback","ev","data","path","argumentList","map","$9d65ffd50b68f22a$var$fromWireValue","reduce","prop","rawValue","returnValue1","parent","transfers","$9d65ffd50b68f22a$export$c9b234447cf4ef7c","value1","catch","returnValue","wireValue","transferables","$9d65ffd50b68f22a$var$toWireValue","postMessage","removeEventListener","$9d65ffd50b68f22a$var$closeEndPoint","endpoint","close","isReleased","Proxy","isProxyReleased","$9d65ffd50b68f22a$export$89981d4b8d9f48aa","$9d65ffd50b68f22a$var$requestResponseMessage","p","proxy1","r","bind","$9d65ffd50b68f22a$var$createProxy","_target","_thisArg","rawArgumentList","$9d65ffd50b68f22a$var$throwIfProxyReleased","last","$9d65ffd50b68f22a$export$39fb953702b7fcd7","$9d65ffd50b68f22a$var$processArguments","construct","processed","v","arr","concat","$9d65ffd50b68f22a$var$transferCache","WeakMap","handler","canHandle","serializedValue","serialize","default","ready"],"version":3,"file":"worker.239d020b.js.map"}