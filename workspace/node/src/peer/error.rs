//! Error type for the peer library.
use thiserror::Error;

/// Errors generated by the peer library.
#[derive(Debug, Error)]
pub enum Error {
    /// Error generated when listening fails.
    #[error("listen {0} failed: {1}")]
    ListenFailed(String, String),

    /// Error generated when dialing fails.
    #[error("dial {0} failed")]
    DialFailed(String),

    /// Error generated when an error occurs on an outbound connection.
    #[error("outgoing connection error: {0}")]
    OutgoingConnection(String),

    /// Error generated when by the noise library.
    #[error(transparent)]
    Noise(#[from] libp2p::noise::NoiseError),

    /// Error generated when by the futures mpsc sender.
    #[error(transparent)]
    FutureMpscSend(#[from] futures::channel::mpsc::SendError),

    /// Error generated when by the futures oneshot.
    #[error(transparent)]
    FutureOneshotCancel(#[from] futures::channel::oneshot::Canceled),
}
