extend= [
  { path = "coverage_grcov.makefile.toml" }
]

[config]
default_to_workspace = false
skip_core_tasks = true

[env]
RUST_BACKTRACE = 0
BUILD_TARGET = "${CARGO_MAKE_RUST_TARGET_TRIPLE}"
# Increase time for integration tests as the CLI
# tests take a while due to so many exec calls
RUST_TEST_TIME_INTEGRATION = "120000,240000"

# NOTE: we use the --release flag to prevent a stack overflow on
# windows, see: https://github.com/clap-rs/clap/issues/5134
[tasks.gen-test-key]
command = "cargo"
args = [
  "run",
  "--release",
  "--bin",
  "sos-server",
  "--",
  "generate-keypair",
  "tests/test.pem",
  "--public-key",
  "tests/server_public_key.txt"
]

[tasks.fix-all]
workspace = true
command = "cargo"
args = ["fix", "--all-features", "--allow-dirty"]

[tasks.fix-clippy]
workspace = true
command = "cargo"
args = ["clippy", "--fix", "--all-features"]

[tasks.fix]
dependencies = ["fix-clippy", "fix-all", "format"]

[tasks.format]
workspace = true
command = "cargo"
args = ["fmt"]

[tasks.format-check]
command = "cargo"
args = ["fmt", "--all", "--", "--check"]

[tasks.check]
workspace = true
command = "cargo"
args = ["check"]

[tasks.clippy]
workspace = true
command = "cargo"
args = ["clippy", "--all-features"]

[tasks.clean]
workspace = true
command = "cargo"
args = ["clean"]

[tasks.build]
workspace = true
command = "cargo"
args = ["build"]
dependencies = ["clean"]

[tasks.release]
command = "cargo"
args = ["build", "--bins", "--all", "--release"]

[tasks.doc]
toolchain = "nightly"
command = "cargo"
args = [
  "doc",
  "--workspace",
  "--open",
  "--no-deps"
]

[tasks.unit]
command = "cargo"
args = ["test", "--all", "--lib", "--", "--nocapture"]

[tasks.test-cli]
command = "cargo"
args = ["test", "command_line", "--", "--nocapture"]

[tasks.test-audit-trail]
command = "cargo"
args = ["test", "audit", "--", "--nocapture"]

[tasks.test-backup-archive]
command = "cargo"
args = ["test", "backup_archive", "--", "--nocapture"]

[tasks.test-device]
command = "cargo"
args = ["test", "device_", "--", "--nocapture"]

[tasks.integration]
command = "cargo"
args = ["test", "integration"]
dependencies = ["test-audit-trail", "test-backup-archive", "test-device"]

[tasks.test-wasm]
command = "wasm-pack"
args = ["test", "--firefox"]

[tasks.test]
dependencies = ["unit", "integration"]

[tasks.dev]
dependencies = ["check-wasm", "test", "format"]

[tasks.check-wasm-node-client]
command = "cargo"
args = [
  "check",
  "--target",
  "wasm32-unknown-unknown",
  "-p",
  "sos-net",
  "--no-default-features",
  "--features",
  "client"
]

[tasks.check-wasm]
command = "cargo"
args = ["check", "--target", "wasm32-unknown-unknown", "-p", "sos-sdk"]
dependencies = ["check-wasm-node-client"]

[tasks.gen-server-key]
command = "cargo"
args = [
  "run",
  "--bin",
  "sos-server",
  "--",
  "generate-keypair",
  "sandbox/server_identity.pem",
]

[tasks.dev-server]
script = '''
cargo run --bin sos-server -- start -c sandbox/config.toml
'''

[tasks.dev-certs]
script = '''
command -v mkcert && cd sandbox && 
  mkcert -key-file key.pem -cert-file cert.pem localhost 127.0.0.1 ::1
'''

[tasks.genhtml]
script = '''
grcov ${COVERAGE_PROF_OUTPUT} -s . --binary-path ./target/cover/debug -t html --branch --ignore-not-existing -o ./target/coverage/ --ignore 'workspace/*/build.rs' --ignore 'tests/*' --ignore 'target/*'

#genhtml -o ./target/debug/coverage/ --show-details --highlight --ignore-errors source --legend ./target/lcov.info
'''

[tasks.coverage]
alias = "coverage_grcov"
dependencies = ["clean-profraw"]

[tasks.clean-profraw]
script = '''
rm -f *.profraw
rm -f workspace/net/*.profraw
rm -f workspace/migrate/*.profraw
rm -f workspace/sdk/*.profraw
'''

[tasks.clean-coverage]
command = "cargo"
args = ["clean", "--target-dir", "target/coverage"]

[tasks.clean-cover]
command = "cargo"
args = ["clean", "--target-dir", "target/cover"]

[tasks.cover]
dependencies = [
  "clean-cover",
  "clean-coverage",
  "coverage",
  "genhtml",
  "clean-profraw"
]
