extend= [
  { path = "coverage_grcov.makefile.toml" }
]
[config]
default_to_workspace = false

[env]
RUST_BACKTRACE = 0
BUILD_TARGET = "${CARGO_MAKE_RUST_TARGET_TRIPLE}"
BINARIES = "sos"
# Increase time for integration tests as the CLI
# tests take a while due to so many exec calls
RUST_TEST_TIME_INTEGRATION = "120000,240000"

[tasks.fix-all]
workspace = true
command = "cargo"
args = ["fix", "--all-features", "--allow-dirty"]

[tasks.fix-clippy]
workspace = true
command = "cargo"
args = ["clippy", "--fix", "--all-features"]

[tasks.fix]
dependencies = ["fix-clippy", "fix-all", "format"]

[tasks.format]
workspace = true
command = "cargo"
args = ["fmt"]

[tasks.format-check]
command = "cargo"
args = ["fmt", "--all", "--", "--check"]

[tasks.check]
workspace = true
command = "cargo"
args = ["check"]

[tasks.clippy]
workspace = true
command = "cargo"
args = ["clippy", "--all-features"]

[tasks.clean]
workspace = true
command = "cargo"
args = ["clean"]

[tasks.build]
workspace = true
command = "cargo"
args = ["build"]
dependencies = ["clean"]

[tasks.release]
command = "cargo"
args = ["build", "--bins", "--all", "--release"]

[tasks.release-macos-arm]
command = "cargo"
args = ["build", "--bins", "--all", "--release", "--target", "aarch64-apple-darwin"]

[tasks.release-macos-x86]
command = "cargo"
args = ["build", "--bins", "--all", "--release", "--target", "x86_64-apple-darwin"]

[tasks.doc]
toolchain = "nightly"
command = "cargo"
args = ["doc", "--workspace", "--open", "--no-deps", "--all-features"]

[tasks.unit]
command = "cargo"
args = ["test", "--all", "--lib", "--", "--nocapture"]

[tasks.cli]
command = "cargo"
args = ["test", "command_line", "--", "--nocapture"]

[tasks.integration]
command = "cargo"
args = ["test", "integration"]

[tasks.test-wasm]
command = "wasm-pack"
args = ["test", "--firefox"]

[tasks.test]
dependencies = ["unit", "integration"]

[tasks.dev]
dependencies = ["check-wasm", "test", "format"]

[tasks.check-wasm-node-client]
command = "cargo"
args = ["check", "--target", "wasm32-unknown-unknown", "-p", "sos-net", "--no-default-features", "--features", "client"]

[tasks.check-wasm]
command = "cargo"
args = ["check", "--target", "wasm32-unknown-unknown", "-p", "sos-sdk"]
dependencies = ["check-wasm-node-client"]

[tasks.server-release]
command = "cargo"
args = ["build", "--release", "--target", "${BUILD_TARGET}", "-p", "sos-server"]

[tasks.dist]
command = "cargo"
args = ["build", "--bins", "--release", "--target", "${BUILD_TARGET}", "--workspace", "--exclude", "sos-server"]
dependencies = ["clean", "server-release"]

[tasks.dev-server]
script = '''
cd workspace/server && cargo run -- -c ../../sandbox/config.toml
'''

[tasks.dev-certs]
script = '''
command -v mkcert && cd sandbox && 
  mkcert -key-file key.pem -cert-file cert.pem localhost 127.0.0.1 ::1
'''

[tasks.genhtml]
script = '''
grcov ${COVERAGE_PROF_OUTPUT} -s . --binary-path ./target/cover/debug -t html --branch --ignore-not-existing -o ./target/coverage/ --ignore '*/src/build.rs' --ignore 'tests/*' --ignore 'target/*'

#genhtml -o ./target/debug/coverage/ --show-details --highlight --ignore-errors source --legend ./target/lcov.info
'''

[tasks.coverage]
alias = "coverage_grcov"
dependencies = ["clean-profraw"]

[tasks.clean-profraw]
script = '''
rm *.profraw
rm workspace/net/*.profraw
rm workspace/migrate/*.profraw
rm workspace/sdk/*.profraw
'''

[tasks.clean-coverage]
command = "cargo"
args = ["clean", "--target-dir", "target/coverage"]

[tasks.clean-cover]
command = "cargo"
args = ["clean", "--target-dir", "target/cover"]

[tasks.cover]
dependencies = ["clean-cover", "clean-coverage", "coverage", "genhtml", "clean-profraw"]

[tasks.brew]
script = '''
cd target && rm -rf homebrew && mkdir homebrew && cd homebrew
mkdir -p arm x86
for bin in ${BINARIES}; do
  cp ../x86_64-apple-darwin/release/$bin ./x86
  cp ../aarch64-apple-darwin/release/$bin ./arm
done

TARBALL=sos-tools-macos-release-${CARGO_MAKE_CRATE_VERSION}.tar.gz
tar -czvf ../${TARBALL} ./x86 ./arm;
shasum -a 256 ../${TARBALL}
'''
dependencies = ["release-macos-arm", "release-macos-x86"]
