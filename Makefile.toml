extend= [
  { path = "coverage.toml" }
]

[config]
default_to_workspace = false
skip_core_tasks = true

[env]
RUST_BACKTRACE = 0
BUILD_TARGET = "${CARGO_MAKE_RUST_TARGET_TRIPLE}"
# Increase time for integration tests as the CLI
# tests take a while due to so many exec calls
RUST_TEST_TIME_INTEGRATION = "120000,240000"

[tasks.typegen]
script = '''
typeshare crates/sdk --lang=typescript --output-file=packages/types/sdk.ts
typeshare crates/ipc --lang=typescript --output-file=packages/types/ipc.ts
'''

[tasks.format]
workspace = true
command = "cargo"
args = ["fmt"]

[tasks.format-check]
command = "cargo"
args = ["fmt", "--all", "--", "--check"]

[tasks.clippy]
workspace = true
command = "cargo"
args = ["clippy", "--all-features"]

[tasks.build]
workspace = true
command = "cargo"
args = ["build"]
dependencies = ["clean"]

[tasks.release]
command = "cargo"
args = ["build", "--bins", "--all", "--release"]

[tasks.clean-doc]
command = "cargo"
args = [
  "clean",
  "--doc",
]

[tasks.doc]
toolchain = "nightly"
command = "cargo"
args = [
  "doc",
  "--workspace",
  "--open",
  "--no-deps"
]
dependencies = ["clean-doc"]

[tasks.unit]
command = "cargo"
args = ["test", "--all", "--lib"]

[tasks.test-command-line]
command = "cargo"
args = [
  "test",
  "command_line",
  "--features",
  "enable-cli-tests",
  "--",
  "--nocapture",
]
dependencies = ["clean-cli"]

[tasks.clean-cli]
script_runner = "@shell"
script = '''
rm -rf target/accounts
rm -rf target/demo
# rm -f target/*.{zip,vcf,heic,txt,toml,csv,json}

mkdir -p target/accounts
mkdir -p target/demo
'''

[tasks.test-cli]
script = { file = "./scripts/cli/specs.sh" }
dependencies = ["clean-cli"]

[tasks.test-shell]
script = { file = "./scripts/cli/shell.sh" }
dependencies = ["clean-cli"]

[tasks.demos]
script = { file = "./scripts/cli/demos.sh" }
dependencies = ["clean-cli"]

[tasks.test]
command = "cargo"
args = ["test", "--all", "--features", "enable-cli-tests"]
dependencies = ["clean-cli"]

[tasks.test-lite]
command = "cargo"
args = ["nextest", "run"]
dependencies = ["clean-cli"]

[tasks.genhtml]
script = '''
grcov ${COVERAGE_PROF_OUTPUT} -s . --binary-path ./target/cover/debug -t html --branch --ignore-not-existing -o ./target/coverage/ --ignore 'workspace/*/build.rs' --ignore 'tests/*' --ignore 'target/*'

#genhtml -o ./target/debug/coverage/ --show-details --highlight --ignore-errors source --legend ./target/lcov.info
'''

[tasks.coverage]
alias = "coverage_grcov"
dependencies = ["clean-profraw"]

[tasks.clean-profraw]
script = '''
rm -f *.profraw
rm -f workspace/net/*.profraw
rm -f workspace/migrate/*.profraw
rm -f workspace/sdk/*.profraw
'''

[tasks.clean-coverage]
command = "cargo"
args = ["clean", "--target-dir", "target/coverage"]

[tasks.clean-cover]
command = "cargo"
args = ["clean", "--target-dir", "target/cover"]

[tasks.cover]
dependencies = [
  "clean-cli",
  "clean-cover",
  "clean-coverage",
  "coverage",
  "genhtml",
  "clean-profraw"
]
