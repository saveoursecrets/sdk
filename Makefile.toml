[config]
default_to_workspace = false
skip_core_tasks = true

[env]
RUST_BACKTRACE = 0
BUILD_TARGET = "${CARGO_MAKE_RUST_TARGET_TRIPLE}"
# Increase time for integration tests as the CLI
# tests take a while due to so many exec calls
RUST_TEST_TIME_INTEGRATION = "120000,240000"

[tasks.publishers]
command = "cargo"
args = [
  "supply-chain",
  "publishers",
]

[tasks.typegen]
script = '''
RUST_LOG=debug typeshare crates/account crates/database crates/login crates/sdk crates/ipc crates/protocol --lang=typescript --output-file=packages/types/types.ts && cat packages/types/preamble.ts packages/types/types.ts > packages/types/index.ts
cd packages/types && npm run fmt && npm run lint
'''

[tasks.format]
workspace = true
command = "cargo"
args = ["fmt"]

[tasks.wasm]
command = "cargo"
args = [
  "check",
  "-p",
  "sos-web",
  "--features",
  "contacts,search",
  "--target",
  "wasm32-unknown-unknown",
]

[tasks.format-check]
command = "cargo"
args = ["fmt", "--all", "--", "--check"]

[tasks.clippy]
workspace = true
command = "cargo"
args = ["clippy", "--all-features"]

[tasks.debug]
command = "cargo"
args = ["build"]

[tasks.release]
command = "cargo"
args = ["build", "--bins", "--all", "--release"]

[tasks.clean-doc]
command = "cargo"
args = [
  "clean",
  "--doc",
]

[tasks.unused]
command = "cargo"
toolchain = "nightly"
args = [
  "udeps",
  "--all-targets",
]

[tasks.doc]
toolchain = "nightly"
command = "cargo"
args = [
  "doc",
  "--workspace",
  "--all-features",
  "--open",
  "--no-deps",
  "--exclude",
  "sos-vfs",
]
dependencies = ["clean-doc"]

[tasks.unit]
command = "cargo"
args = ["test", "--all", "--lib"]

[tasks.test-command-line]
command = "cargo"
args = [
  "test",
  "command_line",
  "-p",
  "sos-command-line-tests",
  "--",
  "--nocapture",
]
dependencies = ["clean-cli"]

[tasks.clean-cli]
script_runner = "@shell"
script = '''
rm -rf target/accounts
rm -rf target/demo
# rm -f target/*.{zip,vcf,heic,txt,toml,csv,json}

mkdir -p target/accounts
mkdir -p target/demo
'''

[tasks.test-cli]
script = { file = "./scripts/cli/specs.sh" }
dependencies = ["clean-cli", "debug" ]

[tasks.test-shell]
script = { file = "./scripts/cli/shell.sh" }
dependencies = ["clean-cli", "debug"]

[tasks.demos]
script = { file = "./scripts/cli/demos.sh" }
dependencies = ["clean-cli"]

# build test helper executables
[tasks.build-test]
command = "cargo"
args = ["build", "-p", "sos-integration-tests"]

[tasks.clean-tests]
script = '''
rm -rf target/integration-test
'''

[tasks.test]
script = '''
cargo nextest run -p sos-integration-tests -p sos-unit-tests
'''
dependencies = ["clean-tests", "build-test"]

[tasks.test-all]
script = '''
cargo nextest run \
  -p sos-integration-tests -p sos-unit-tests
SOS_TEST_CLIENT_DB=1 cargo nextest run \
  -p sos-integration-tests -p sos-unit-tests
SOS_TEST_SERVER_DB=1 cargo nextest run \
  -p sos-integration-tests -p sos-unit-tests
SOS_TEST_CLIENT_DB=1 SOS_TEST_SERVER_DB=1 cargo nextest run \
  -p sos-integration-tests -p sos-unit-tests
'''
dependencies = ["clean-tests", "build-test"]

[tasks.ci]
script = '''
cargo nextest run --profile ci \
  -p sos-integration-tests -p sos-unit-tests
SOS_TEST_CLIENT_DB=1 cargo nextest run --profile ci \
  -p sos-integration-tests -p sos-unit-tests
SOS_TEST_SERVER_DB=1 cargo nextest run --profile ci \
  -p sos-integration-tests -p sos-unit-tests
SOS_TEST_CLIENT_DB=1 SOS_TEST_SERVER_DB=1 cargo nextest run --profile ci \
  -p sos-integration-tests -p sos-unit-tests
'''
dependencies = ["clean-tests", "build-test"]

[tasks.cover]
script = '''
cargo llvm-cov clean --workspace
cargo llvm-cov nextest \
  --no-report -p sos-integration-tests -p sos-unit-tests
SOS_TEST_CLIENT_DB=1 cargo llvm-cov nextest \
  --no-report -p sos-integration-tests -p sos-unit-tests
SOS_TEST_SERVER_DB=1 cargo llvm-cov nextest \
  --no-report -p sos-integration-tests -p sos-unit-tests
SOS_TEST_CLIENT_DB=1 SOS_TEST_SERVER_DB=1 cargo llvm-cov nextest \
  --no-report -p sos-integration-tests -p sos-unit-tests
cargo llvm-cov report --html
'''
dependencies = ["clean-tests"]
