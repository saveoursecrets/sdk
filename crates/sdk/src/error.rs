//! Errors generated by the core library.
use thiserror::Error;

/// Error thrown by the core library.
#[derive(Debug, Error)]
pub enum Error {
    /// Error generated by the core library.
    #[error(transparent)]
    Core(#[from] sos_core::Error),

    /// Error generated by the core library.
    #[error(transparent)]
    Vault(#[from] sos_vault::Error),

    /// Error generated by the filesystem library.
    #[error(transparent)]
    FileSystem(#[from] sos_filesystem::Error),

    /// Error generated by the signer library.
    #[error(transparent)]
    Signer(#[from] sos_signer::Error),

    /// Error generated by the password library.
    #[error(transparent)]
    Password(#[from] sos_password::Error),

    /// Error generated by password hash.
    #[error(transparent)]
    Io(#[from] std::io::Error),
}

/*
impl ErrorExt for Error {
    fn is_secret_not_found(&self) -> bool {
        false
    }

    fn is_permission_denied(&self) -> bool {
        matches!(self, Error::Vault(sos_vault::Error::PassphraseVerification))
    }
}
*/
