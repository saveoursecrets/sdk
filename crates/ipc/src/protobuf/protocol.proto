syntax = "proto3";

package protocol;

// IPC request packet.
message WireIpcRequest {
  // Message identifier.
  uint64 message_id = 1;
  // Request body.
  WireIpcRequestBody body = 2;
}

// IPC request body.
message WireIpcRequestBody {
  // Inner values.
  oneof inner {

    // Request to open a program.
    WireOpenUrlBody open_url = 1;

    // Request a list of accounts.
    WireVoidBody list_accounts = 2;

    // Request to authenticate to an account.
    WireAuthenticateBody authenticate  = 3;

    // Request to lock an account.
    WireLockBody lock  = 4;
  }
}

// Void request body.
message WireVoidBody {}

// Request body to open a URL.
message WireOpenUrlBody {
  // URL to open.
  string url = 1;
}

// Authenticate request body.
message WireAuthenticateBody {
  // Account address.
  string address = 1;
}

// Lock request body.
message WireLockBody {
  // Account address.
  string address = 1;
}

// IPC response packet.
message WireIpcResponse {
  // Message identifier.
  uint64 message_id = 1;
  // Response result.
  oneof result {
    // Error result.
    WireIpcResponseError error = 2;
    // Result body.
    WireIpcResponseBody body = 3;
  }
}

// IPC response body.
message WireIpcResponseBody {
  // Inner values.
  oneof inner {
    // Request to open a URL.
    WireOpenUrl open_url = 1;
    // List accounts body.
    WireAccountList list_accounts = 2;
    // Authenticate body.
    WireCommandOutcome authenticate = 3;
    // Lock body.
    WireCommandOutcome lock = 4;
  }
}

// IPC response error.
message WireIpcResponseError {
  // Error code.
  int32 code = 1;
  // Error message.
  string message = 2;
}

// Result of an open command.
message WireOpenUrl {
  // Whether the open command was successful.
  bool is_ok = 1;
}

// List of accounts.
message WireAccountList {
  // Collection of accounts.
  repeated WireAccountInfo accounts = 1;
}

// Outcome of a delegated command.
enum WireCommandOutcome {
  // Account not found.
  NotFound = 0;
  // Already authenticated.
  AlreadyAuthenticated = 1;
  // Not authenticated.
  NotAuthenticated = 2;
  // Authentication success.
  Success = 3;
  // Authentication failed.
  Failed = 4;
  // User canceled.
  Canceled = 5;
  // Timed out waiting for user input.
  TimedOut = 6;
  // Too many attempts.
  Exhausted = 7;
  // Error getting user input.
  InputError = 8;
}

// Information about an account.
message WireAccountInfo {
  // Public identity information.
  WirePublicIdentity public_id = 1;
  // Whether the account is currently authenticated.
  bool authenticated = 2;
}

// Public identity for an account.
message WirePublicIdentity {
  // Account address.
  string address = 1;
  // Account label.
  string label = 2;
}
