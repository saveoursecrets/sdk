//! Cross-platform keyboard with extra features to time out
//! sensitive data and listen for clipboard change events.
#![deny(missing_docs)]
#![forbid(unsafe_code)]
#![cfg_attr(all(doc, CHANNEL_NIGHTLY), feature(doc_auto_cfg))]

mod error;

/// Errors generated by the clipboard library.
pub use error::Error;

/// Result type for the clipboard library.
pub(crate) type Result<T> = std::result::Result<T, Error>;

#[cfg(all(not(target_os = "android"), not(target_os = "ios")))]
mod desktop;

#[cfg(all(not(target_os = "android"), not(target_os = "ios")))]
pub use desktop::*;

#[cfg(target_os = "android")]
mod android;

#[cfg(target_os = "android")]
pub use android::*;

#[cfg(target_os = "ios")]
mod ios;

#[cfg(target_os = "ios")]
pub use ios::*;
